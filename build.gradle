buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = '0.5.3'
group = 'com.warmthdawn.mod.gugu-utils' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'gugu-utils'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = mcp_mappings
//    useDepAts = true
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}


repositories {
    maven {
        name = "blamejared"
        url = "https://maven.blamejared.com"
    }
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven { url "https://maven.hellfiredev.net" }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "ChickenBones Maven"
        url = "http://chickenbones.net/maven/"
    }

    maven { url = "http://maven.cil.li/" }

    maven { url = "https://maven.ellpeck.de/" }

    maven {
        url "https://www.cursemaven.com"
    }

}

dependencies {

    compileOnly "mezz.jei:jei_${mc_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    deobfCompile "com.github.mcjty:mcjtylib:${mc_short}-${mcjtylib_version}"
    implementation "org.jetbrains:annotations:20.1.0"
    deobfCompile "hellfirepvp.modularmachinery:modularmachinery:${mc_version}-${modularmachinery_version}"

    deobfCompile "vazkii.botania:Botania:${botania_version}"
    deobfCompile "vazkii.psi:Psi:${psi_version}"
    deobfCompile "vazkii.autoreglib:AutoRegLib:${arl_version}"
    runtime "com.azanor.baubles:Baubles:${mc_short}-${baubles_version}"
    deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:${mc_short}-${crafttweaker_version}"
    deobfCompile "com.blamejared:MTLib:${mtlib_version}"
    deobfCompile "hellfirepvp.astralsorcery:astralsorcery:${mc_version}-${astralsorcery_version}"

    deobfCompile "vazkii.patchouli:Patchouli:${patchouli_version}"

    deobfCompile("appeng:appliedenergistics2:${ae2_version}") {
        exclude group: "mezz.jei"
    }
    deobfCompile "de.ellpeck.naturesaura:NaturesAura:${naturesaura_version}"
    deobfCompile "de.ellpeck.actuallyadditions:ActuallyAdditions:${mc_version}-${actuallyadditions_version}"
//    deobfCompile "com.wayoftime.bloodmagic:BloodMagic:BloodMagic-${mc_version}-${bloodmagic_version}"

    runtime "curse.maven:guideapi-${guideapi_version}"

//    deobfCompile "curse.maven:embersrekindled-${embers_version}"
    deobfCompile "curse.maven:embersrekindled-${embers_version}"
    deobfCompile "curse.maven:bloodmagic-${bloodmagic_version_curse}"


//    deobfProvided("cofh:RedstoneFlux:${mc_short}-${redstoneflux_version}:universal") {
//        exclude group: "mezz.jei"
//    }
//    deobfProvided("cofh:CoFHCore:${mc_version}-${cofhcore_version}:universal") {
//        exclude group: "mezz.jei"
//    }
//    deobfProvided("cofh:ThermalFoundation:${mc_version}-${thermalfoundation_version}:universal") {
//        exclude group: "mezz.jei"
//    }
//    deobfProvided("cofh:ThermalDynamics:${mc_version}-${thermaldynamics_version}:universal") {
//        exclude group: "mezz.jei"
//    }
//    deobfProvided("cofh:CoFHWorld:${mc_version}-${cofhworld_version}:universal") {
//        exclude group: "mezz.jei"
//    }
//    deobfProvided("codechicken:CodeChickenLib:${mc_version}-${ccl_version}:universal") {
//        exclude group: "mezz.jei"
//    }

    deobfCompile("cofh:RedstoneFlux:${mc_short}-${redstoneflux_version}:universal") {
        exclude group: "mezz.jei"
    }
    deobfCompile("cofh:CoFHCore:${mc_version}-${cofhcore_version}:universal") {
        exclude group: "mezz.jei"
    }
    deobfCompile("cofh:ThermalFoundation:${mc_version}-${thermalfoundation_version}:universal") {
        exclude group: "mezz.jei"
    }
    deobfCompile("cofh:ThermalDynamics:${mc_version}-${thermaldynamics_version}:universal") {
        exclude group: "mezz.jei"
    }
    deobfCompile("cofh:CoFHWorld:${mc_version}-${cofhworld_version}:universal") {
        exclude group: "mezz.jei"
    }
    deobfCompile("codechicken:CodeChickenLib:${mc_version}-${ccl_version}:universal") {
        exclude group: "mezz.jei"
    }



}

jar {
    manifest {
        attributes "FMLAT": "guug_at.cfg"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
